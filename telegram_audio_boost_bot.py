#!/usr/bin/env python3
# telegram_audio_boost_bot.py
# –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, YouTube), —Å–∫–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ,
# —É—Å–∏–ª–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É –≤ 20 dB –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

import os
import logging
import subprocess
import tempfile
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import yt_dlp

# –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ —É @BotFather –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN
TOKEN = os.getenv("BOT_TOKEN")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è –≤–µ—Ä–Ω—É —Ç–µ–±–µ —Ñ–∞–π–ª —Å —É—Å–∏–ª–µ–Ω–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç—å—é x2 (‚âà20dB)."  
    )


def process_link(update: Update, context: CallbackContext):
    url = update.message.text.strip()
    chat_id = update.effective_chat.id
    status_msg = update.message.reply_text("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞...")

    with tempfile.TemporaryDirectory() as tmpdir:
        input_path = os.path.join(tmpdir, "input.mp4")
        output_path = os.path.join(tmpdir, "output.mp4")

        # –®–∞–≥ 1: –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ yt-dlp
        ydl_opts = {
            'format': 'best[ext=mp4]/best',
            'outtmpl': input_path,
            'quiet': True,
        }
        try:
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                ydl.download([url])
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}")
            status_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.")
            return

        # –®–∞–≥ 2: –£—Å–∏–ª–∏—Ç—å –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é FFmpeg –Ω–∞ 20 dB (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ x10)
        ffmpeg_cmd = [
            'ffmpeg', '-y', '-i', input_path,
            '-filter:a', 'volume=20dB',
            '-c:v', 'copy',
            '-c:a', 'aac', '-b:a', '192k',
            output_path
        ]
        try:
            subprocess.run(ffmpeg_cmd, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        except subprocess.CalledProcessError as e:
            logger.error(f"–û—à–∏–±–∫–∞ FFmpeg: {e.stderr.decode()}")
            status_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ.")
            return

        # –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(output_path, 'rb') as f:
            context.bot.send_document(chat_id=chat_id, document=f)

        status_msg.delete()


def main():
    if not TOKEN:
        logger.error("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω BOT_TOKEN. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
        return

    updater = Updater(TOKEN)
    dp = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.entity("url") & Filters.text, process_link))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
